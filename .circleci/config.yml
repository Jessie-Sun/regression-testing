version: 2

anchors:
  container_config: &container_config
    docker:
      - image: circleci/node:8-browsers

  workspace_root: &workspace_root
    ~/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  restore_yarn_cache: &restore_yarn_cache
    restore_cache:
      keys:
        - yarn-packages-{{ checksum "yarn.lock" }}

  project_yarn_install: &project_yarn_install
    run: yarn install --frozen-lockfile --non-interactive

  save_yarn_cache: &save_yarn_cache
    save_cache:
      paths:
        - ~/.cache/yarn
        - node_modules
      key: yarn-packages-{{ checksum "yarn.lock" }}

  install_from_submodule: &install_from_submodule
    run: |
      yarn add -W ../vue/vue-v*.tgz
      yarn add -W ../vue/packages/vue-server-renderer/vue-server-renderer-v*.tgz
      yarn add -W ../vue/packages/vue-template-compiler/vue-template-compiler-v*.tgz

  run_element_test: &run_element_test

  run_nuxt_test: &run_nuxt_test

  run_vuetify_test: &run_vuetify_test

jobs:
  update:
    <<: *container_config
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: init
          command: |
            git submodule sync
            git submodule update --init
      - run:
          name: update submodule
          command: |
            git config --global user.email "${GITHUB_EMAIL}"
            git config --global user.name "Vue Regression Bot"

            git submodule update --remote vue
            cd vue && git checkout $VUE_REVISION
            cd ../

            # if VUE_REVISION has not changed since last update,
            # git push will exit with code 1 and test will fail
            git commit -am 'update vue from circleci' || test 1 = 1
            git push || test 1 = 1

  build_vue:
    <<: *container_config
    working_directory: ~/repo/vue
    steps:
      - checkout:
          path: ~/repo

      - run:
          name: init
          command: |
            git submodule sync
            git submodule update --init

      - *restore_yarn_cache
      - run: yarn install --pure-lockfile
      - *save_yarn_cache

      - run: yarn build
      - run: ../pack-vue.sh

      - run: |
          mkdir -p ~/workspace
          mv ~/repo/ ~/workspace/repo

      - persist_to_workspace:
          root: ~/workspace
          paths:
            - repo

  vue-router:
    <<: *container_config
    working_directory: ~/workspace/repo/vue-router
    steps:
      - *attach_workspace
      - *restore_yarn_cache
      - *project_yarn_install
      - *save_yarn_cache
      - *install_from_submodule
      - run: yarn test

  vuex:
    <<: *container_config
    working_directory: ~/workspace/repo/vuex
    steps:
      - *attach_workspace
      - *restore_yarn_cache
      - *project_yarn_install
      - *save_yarn_cache
      - *install_from_submodule
      - run: yarn test

  element:
    <<: *container_config
    working_directory: ~/workspace/repo/element
    steps:
      - *attach_workspace
      - *restore_yarn_cache
      - *project_yarn_install
      - *save_yarn_cache
      - *install_from_submodule
      # don't know why but for now it only works after installing twice
      - *install_from_submodule
      - run: yarn test

  nuxt.js:
    <<: *container_config
    working_directory: ~/workspace/repo/nuxt.js
    environment:
      NODE_ENV: test
    steps:
      - *attach_workspace
      - *restore_yarn_cache
      - *project_yarn_install
      - *save_yarn_cache
      - *install_from_submodule
      - run: yarn test:fixtures -w=4
      - run: yarn test:unit -w=4
      - run: yarn test:e2e

  vuetify:
    <<: *container_config
    working_directory: ~/workspace/repo/vuetify
    steps:
      - *attach_workspace
      - *restore_yarn_cache
      - *project_yarn_install
      - *save_yarn_cache
      - *install_from_submodule
      - run: npx lerna run test:coverage -- -i

workflows:
  version: 2

  test_all:
    jobs:
      - build_vue
      - vue-router:
          requires:
            - build_vue
      - vuex:
          requires:
            - build_vue
      - element:
          requires:
            - build_vue
      - nuxt.js:
          requires:
            - build_vue
      - vuetify:
          requires:
            - build_vue
